---
resources:
  - name: repo
    type: git
    source:
      uri: git@github.com:making/ik.am.git
      branch: master
      private_key: {{github-private-key}}
    webhook_token: {{webhook-token}}
    check_every: 10000h
  - name: repo-version
    type: semver
    source:
      uri: git@github.com:making/ik.am-version.git
      branch: master
      private_key: {{github-private-key}}
      file: version
      driver: git
  - name: cf
    type: cf
    source:
      api: {{cf-api}}
      username: {{cf-username}}
      password: {{cf-password}}
      organization: {{cf-org}}
      space: home
      skip_cert_check: true
jobs:
  - name: unit-test
    plan:
      - aggregate:
        - get: repo
          resource: repo
          trigger: true
      - task: unit
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: maven
          inputs:
          - name: repo
          caches:
          - path: repo/m2
          run:
            path: bash
            args:
            - -c
            - |
              set -e
              cd repo
              rm -rf ~/.m2
              ln -fs $(pwd)/m2 ~/.m2
              ./mvnw test
  - name: deploy-to-nexus
    plan:
      - aggregate:
        - get: repo
          resource: repo
          trigger: true
          passed:
          - unit-test
      - task: deploy
        params:  &NEXUS_SNAPSHOT
          NEXUS_URL: {{nexus-snapshot-url}}
          NEXUS_USERNAME: {{nexus-username}}
          NEXUS_PASSWORD: {{nexus-password}}
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: maven
          inputs:
          - name: repo
          outputs:
          - name: build
          caches:
          - path: repo/m2
          run:
            path: bash
            args:
            - -c
            - |
              set -e
              cd repo
              rm -rf ~/.m2
              ln -fs $(pwd)/m2 ~/.m2
              cat > settings.xml <<EOF
              <settings>
                <servers>
                  <server>
                     <id>repo</id>
                     <username>${NEXUS_USERNAME}</username>
                     <password>${NEXUS_PASSWORD}</password>
                  </server>
                </servers>
              </settings>
              EOF
              ./mvnw deploy -s settings.xml -DskipTests=true -DaltDeploymentRepository=repo::default::${NEXUS_URL} -Dmaven.wagon.http.ssl.insecure=true -D maven.wagon.http.ssl.ignore.validity.dates=true
  - name: deploy-to-cf
    plan:
      - aggregate:
        - get: repo
          resource: repo
          trigger: true
          passed:
          - deploy-to-nexus
        - get: repo-version
      - task: download
        params:
          <<: *NEXUS_SNAPSHOT
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: maven
          inputs:
          - name: repo
          outputs:
          - name: build
          run:
            path: bash
            args:
            - -c
            - |
              set -e
              cd repo
              GROUP_ID=`grep '<groupId>' pom.xml | head -1  | sed -r 's/[ \f\n\r\t]+//g' | sed  -r 's|<.?groupId>||g'`
              ARTIFACT_ID=`grep '<artifactId>' pom.xml | head -1  | sed -r 's/[ \f\n\r\t]+//g' | sed  -r 's|<.?artifactId>||g'`
              VERSION=`grep '<version>' pom.xml | head -1  | sed -r 's/[ \f\n\r\t]+//g' | sed  -r 's|<.?version>||g'`
              URL=${NEXUS_URL}/`echo ${GROUP_ID} | sed 's|\.|/|g'`/${ARTIFACT_ID}/${VERSION}
              SNAPSHOT=`curl -k -s ${URL}/maven-metadata.xml | grep '<snapshotVersions>' -A 3 | grep 'value' | tr -d ' ' | tr -d '</value>'`
              echo "Download ${URL}/${ARTIFACT_ID}-${SNAPSHOT}.jar"
              curl -k -u ${NEXUS_USERNAME}:${NEXUS_PASSWORD} -L -J -O ${URL}/${ARTIFACT_ID}-${SNAPSHOT}.jar
              mv *.jar ../build/app.jar
      - put: cf
        params:
          manifest: repo/manifest.yml
          path: build/app.jar
          current_app_name: web
